// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rentals_API_NET6.Context;

#nullable disable

namespace Rentals_API_NET6.Migrations
{
    [DbContext(typeof(RentalsDbContext))]
    [Migration("20220119201551_Imgs")]
    partial class Imgs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.AccessoryItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("AccessoryId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "AccessoryId");

                    b.HasIndex("AccessoryId");

                    b.ToTable("AccessoryItems");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.CartItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Těla fotoaparátů"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Objektivy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fotoaparáty"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Stativy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Příslušenství"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ostatní"
                        });
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.CategoryItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 2,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 3,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 4,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 6,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 7,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 8,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 9,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 10,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 11,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 12,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 13,
                            CategoryId = 2
                        },
                        new
                        {
                            ItemId = 14,
                            CategoryId = 2
                        },
                        new
                        {
                            ItemId = 15,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 16,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 17,
                            CategoryId = 2
                        },
                        new
                        {
                            ItemId = 18,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 19,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 20,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 21,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 22,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 23,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 24,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 25,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 26,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 27,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 28,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 29,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 30,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 31,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 32,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 33,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 34,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 35,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 36,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 37,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 38,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 39,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 40,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 41,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 42,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 43,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 44,
                            CategoryId = 2
                        },
                        new
                        {
                            ItemId = 45,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 46,
                            CategoryId = 2
                        },
                        new
                        {
                            ItemId = 47,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 48,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 49,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 50,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 51,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 52,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 53,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 54,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 55,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 56,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 57,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 58,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 59,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 60,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 61,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 62,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 63,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 64,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 65,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 66,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 67,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 68,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 69,
                            CategoryId = 2
                        },
                        new
                        {
                            ItemId = 70,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 71,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 72,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 73,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 74,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 75,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 76,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 77,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 78,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 79,
                            CategoryId = 2
                        },
                        new
                        {
                            ItemId = 80,
                            CategoryId = 3
                        },
                        new
                        {
                            ItemId = 81,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 82,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 83,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 84,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 85,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 86,
                            CategoryId = 5
                        },
                        new
                        {
                            ItemId = 87,
                            CategoryId = 4
                        },
                        new
                        {
                            ItemId = 88,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 89,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 90,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 91,
                            CategoryId = 6
                        },
                        new
                        {
                            ItemId = 92,
                            CategoryId = 6
                        });
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.FavouriteItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteItems");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.InventoryItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Kamera",
                            IsDeleted = true,
                            Name = "Kamera",
                            State = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Kamera",
                            IsDeleted = true,
                            Name = "Kamera",
                            State = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dobrý zvuk",
                            IsDeleted = true,
                            Name = "Mikrofon",
                            State = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Dobrý zvuk",
                            IsDeleted = true,
                            Name = "Mikrofon",
                            State = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "24,1 Mpx",
                            IsDeleted = true,
                            Name = "Kamera Sony",
                            State = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "24,1 Mpx",
                            IsDeleted = true,
                            Name = "Kamera Sony",
                            State = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "24,1 Mpx",
                            IsDeleted = true,
                            Name = "Kamera Sony",
                            State = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Lehké tělo, kompaktní, s možností až 4K videa",
                            IsDeleted = true,
                            Name = "Zrcadlovka SONY Alpha A6300",
                            State = 0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Lehké tělo, kompaktní, s možností až 4K videa",
                            IsDeleted = true,
                            Name = "Zrcadlovka SONY Alpha A6300",
                            State = 0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Lehké tělo, kompaktní, s možností až 4K videa",
                            IsDeleted = true,
                            Name = "Zrcadlovka SONY Alpha A6300",
                            State = 0
                        },
                        new
                        {
                            Id = 11,
                            Img = "EOS650D_5a40.jpg",
                            IsDeleted = false,
                            Name = "Fotoaparát Canon EOS 650D",
                            Note = "Bez očnice",
                            State = 0
                        },
                        new
                        {
                            Id = 12,
                            Img = "EOS650D_5a40.jpg",
                            IsDeleted = false,
                            Name = "Fotoaparát Canon EOS 650D",
                            Note = "Bez očnice",
                            State = 0
                        },
                        new
                        {
                            Id = 13,
                            Img = "Sigma18-50_f918.jpg",
                            IsDeleted = false,
                            Name = "Objektiv SIGMA 17-50 mm 1:2.8",
                            Note = "Prstenec transfokátoru má vůli",
                            State = 0
                        },
                        new
                        {
                            Id = 14,
                            Img = "Sigma18-50_f918.jpg",
                            IsDeleted = false,
                            Name = "Objektiv SIGMA 17-50 mm 1:2.8",
                            Note = "Určen primárně do ateliéru!",
                            State = 0
                        },
                        new
                        {
                            Id = 15,
                            Img = "EOS70D_b624.jpg",
                            IsDeleted = false,
                            Name = "Fotoaparát Canon EOS 70D",
                            State = 0
                        },
                        new
                        {
                            Id = 16,
                            Img = "EOS70D_b624.jpg",
                            IsDeleted = false,
                            Name = "Fotoaparát Canon EOS 70D",
                            Note = "Určen primárně do ateliéru!",
                            State = 0
                        },
                        new
                        {
                            Id = 17,
                            Description = "FullFrame objektiv",
                            Img = "Sigma24-70_7bde.jpg",
                            IsDeleted = false,
                            Name = "Objektiv SIGMA 24-70 mm 1:2.8",
                            State = 0
                        },
                        new
                        {
                            Id = 18,
                            Description = "Stříbrná",
                            IsDeleted = false,
                            Name = "Videokamera Sony 1.9/2.1-57",
                            State = 0
                        },
                        new
                        {
                            Id = 19,
                            Description = "Stříbrná",
                            IsDeleted = false,
                            Name = "Videokamera Sony 1.9/2.1-57",
                            State = 0
                        },
                        new
                        {
                            Id = 20,
                            Description = "Stříbrná",
                            IsDeleted = false,
                            Name = "Videokamera Sony 1.9/2.1-57",
                            State = 0
                        },
                        new
                        {
                            Id = 21,
                            Description = "F1.8/f1.9-57 (černá)",
                            Img = "SonyHDR-CX320_6824.jpg",
                            IsDeleted = false,
                            Name = "Videokamera Sony HDR-CX320",
                            State = 0
                        },
                        new
                        {
                            Id = 22,
                            Img = "gripC70D_2982.jpg",
                            IsDeleted = false,
                            Name = "Bateriový grip Phottix BG 70D",
                            State = 0
                        },
                        new
                        {
                            Id = 23,
                            IsDeleted = true,
                            Name = "Knoflíková baterie GP Alkaline A76 LR44 V13GA 1.5 V",
                            State = 0
                        },
                        new
                        {
                            Id = 24,
                            Description = "90 MB/s",
                            Img = "SDSanDisk64GB_715b.jpg",
                            IsDeleted = false,
                            Name = "SD karta SanDisk 64 GB",
                            State = 0
                        },
                        new
                        {
                            Id = 25,
                            Description = "90 MB/s",
                            Img = "SDSanDisk64GB_715b.jpg",
                            IsDeleted = false,
                            Name = "SD karta SanDisk 64 GB",
                            State = 0
                        },
                        new
                        {
                            Id = 26,
                            IsDeleted = true,
                            Name = "Alkalická baterie Alkalisk 1.5 V LR03 AAA Ikea",
                            State = 0
                        },
                        new
                        {
                            Id = 27,
                            IsDeleted = true,
                            Name = "Alkalická baterie Alkalisk 1.5 V LR03 AAA Ikea",
                            State = 0
                        },
                        new
                        {
                            Id = 28,
                            IsDeleted = true,
                            Name = "Alkalická baterie Eneloop 1.2 V HR 3UTG AA",
                            State = 0
                        },
                        new
                        {
                            Id = 29,
                            IsDeleted = true,
                            Name = "Alkalická baterie Eneloop 1.2 V HR 4UTG AAA",
                            State = 0
                        },
                        new
                        {
                            Id = 30,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AAA",
                            State = 0
                        },
                        new
                        {
                            Id = 31,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AAA",
                            State = 0
                        },
                        new
                        {
                            Id = 32,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AAA",
                            State = 0
                        },
                        new
                        {
                            Id = 33,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AA",
                            State = 0
                        },
                        new
                        {
                            Id = 34,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AA",
                            State = 0
                        },
                        new
                        {
                            Id = 35,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AA",
                            State = 0
                        },
                        new
                        {
                            Id = 36,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AA",
                            State = 0
                        },
                        new
                        {
                            Id = 37,
                            IsDeleted = true,
                            Name = "Alkalická baterie LSD 1.2 V AA",
                            State = 0
                        },
                        new
                        {
                            Id = 38,
                            Description = "Černý",
                            IsDeleted = true,
                            Name = "MicroSD karta adapter SAMSUNG",
                            State = 0
                        },
                        new
                        {
                            Id = 39,
                            Description = "Černý",
                            IsDeleted = false,
                            Name = "SD karta Kingston SD10G3 32 GB",
                            State = 0
                        },
                        new
                        {
                            Id = 40,
                            Description = "Průhledné",
                            IsDeleted = true,
                            Name = "Pouzdro na SD kartu",
                            State = 0
                        },
                        new
                        {
                            Id = 41,
                            Description = "Průhledné",
                            IsDeleted = true,
                            Name = "Pouzdro na SD kartu",
                            State = 0
                        },
                        new
                        {
                            Id = 42,
                            Description = "Průhledné",
                            IsDeleted = true,
                            Name = "Pouzdro na SD kartu",
                            State = 0
                        },
                        new
                        {
                            Id = 43,
                            Description = "Průhledné",
                            IsDeleted = true,
                            Name = "Pouzdro na SD kartu",
                            State = 0
                        },
                        new
                        {
                            Id = 44,
                            Description = "FullFrame",
                            Img = "CanonEF70-200_b2f2.jpg",
                            IsDeleted = false,
                            Name = "Objektiv Canon ULTRASONIC 70-200 mm F4",
                            State = 0
                        },
                        new
                        {
                            Id = 45,
                            Description = "Černý",
                            IsDeleted = false,
                            Name = "Fotoaparát Canon EOS 350D",
                            State = 0
                        },
                        new
                        {
                            Id = 46,
                            Description = "FullFrame",
                            Img = "CanonEF50_0055.jpg",
                            IsDeleted = false,
                            Name = "Objektiv Canon 50 mm F1.8",
                            State = 0
                        },
                        new
                        {
                            Id = 47,
                            Description = "Černá",
                            IsDeleted = false,
                            Name = "Baterie SONY NP FV70A 1900mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 48,
                            Description = "Černá",
                            IsDeleted = true,
                            Name = "Baterie Canon LP E6N 1865mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 49,
                            Description = "Černá",
                            IsDeleted = true,
                            Name = "Baterie Canon LP E6 1800mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 50,
                            Description = "k 650D (šedá)",
                            Img = "BattLPE8_fd96.jpg",
                            IsDeleted = false,
                            Name = "Baterie Canon LP E8 1120mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 51,
                            Description = "k 650D (šedá)",
                            Img = "BattLPE8_fd96.jpg",
                            IsDeleted = false,
                            Name = "Baterie Canon LP E8 1120mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 52,
                            Description = "k 650D (šedá)",
                            Img = "BattLPE8_fd96.jpg",
                            IsDeleted = false,
                            Name = "Baterie Canon LP E8 1120mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 53,
                            Description = "k C70D, C5D",
                            Img = "BattLPE6_03b5.jpg",
                            IsDeleted = false,
                            Name = "Baterie Canon LP E6 1800mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 54,
                            Description = "k C70D, C5D",
                            Img = "BattLPE6_03b5.jpg",
                            IsDeleted = false,
                            Name = "Baterie Canon LP E6 1800mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 55,
                            Description = "k C70D, C5D",
                            Img = "BattLPE6_03b5.jpg",
                            IsDeleted = false,
                            Name = "Baterie Canon LP E6 1800mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 56,
                            Description = "Černá",
                            IsDeleted = true,
                            Name = "Baterie Canon LP E6 1865mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 57,
                            Description = "Černá",
                            IsDeleted = false,
                            Name = "Baterie SONY NP FV30 500mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 58,
                            Description = "Černá",
                            IsDeleted = false,
                            Name = "Baterie SONY NP FV30 500mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 59,
                            Description = "Černá",
                            IsDeleted = false,
                            Name = "Baterie SONY NP FV30 500mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 60,
                            Description = "náhradní akumulátor",
                            IsDeleted = false,
                            Name = "Baterie Panasonic VW VBN130 1250mAh",
                            State = 0
                        },
                        new
                        {
                            Id = 61,
                            Description = "k C70D, C5D",
                            Img = "BattChgLC-E6E_27dd.jpg",
                            IsDeleted = false,
                            Name = "Nabíječka baterií Canon LC E6E",
                            State = 0
                        },
                        new
                        {
                            Id = 62,
                            Description = "k C70D, C5D",
                            Img = "BattChgLC-E6E_27dd.jpg",
                            IsDeleted = false,
                            Name = "Nabíječka baterií Canon LC E6E",
                            State = 0
                        },
                        new
                        {
                            Id = 63,
                            Description = "k C650D",
                            Img = "BattChgLC-E8E_02bb.jpg",
                            IsDeleted = false,
                            Name = "Nabíječka baterií Canon LC E8E",
                            State = 0
                        },
                        new
                        {
                            Id = 64,
                            Description = "k C650D",
                            Img = "BattChgLC-E8E_02bb.jpg",
                            IsDeleted = false,
                            Name = "Nabíječka baterií Canon LC E8E",
                            State = 0
                        },
                        new
                        {
                            Id = 65,
                            Description = "Černá",
                            IsDeleted = false,
                            Name = "Nabíječka baterií FK technics BC 450",
                            State = 0
                        },
                        new
                        {
                            Id = 66,
                            Description = "Černý",
                            IsDeleted = true,
                            Name = "Napájecí kabel I SHENG 033",
                            State = 0
                        },
                        new
                        {
                            Id = 67,
                            Description = "Černý",
                            IsDeleted = true,
                            Name = "Napájecí kabel I SHENG 033",
                            State = 0
                        },
                        new
                        {
                            Id = 68,
                            IsDeleted = true,
                            Name = "Testujeme s.r.o.",
                            State = 0
                        },
                        new
                        {
                            Id = 69,
                            Description = "(Kz)",
                            Img = "Sigma18-200_cd74.jpg",
                            IsDeleted = false,
                            Name = "Objektiv SIGMA 18-200 mm 1:3.5-6.3",
                            State = 0
                        },
                        new
                        {
                            Id = 70,
                            Img = "StativVelbonC-600_b14c.jpg",
                            IsDeleted = false,
                            Name = "Stativ Velbon C-600",
                            Note = "xxx 2308",
                            State = 0
                        },
                        new
                        {
                            Id = 71,
                            Img = "StativVelbonC-600_b14c.jpg",
                            IsDeleted = false,
                            Name = "Stativ Velbon C-600",
                            State = 0
                        },
                        new
                        {
                            Id = 72,
                            Description = "95 MB/s",
                            Img = "SDLexar64GB_e4c2.jpg",
                            IsDeleted = false,
                            Name = "SD karta Lexar 64GB",
                            State = 0
                        },
                        new
                        {
                            Id = 73,
                            Description = "Rezervace místnosti se studiovými světly a odpalovačem.",
                            Img = "atelier_a27b.jpg",
                            IsDeleted = false,
                            Name = "Ateliér B210",
                            State = 0
                        },
                        new
                        {
                            Id = 74,
                            Description = "Hlava má vůli; nevhodný na video",
                            Img = "hamaStar62_914d.jpg",
                            IsDeleted = false,
                            Name = "Stativ Hama Star 62",
                            State = 0
                        },
                        new
                        {
                            Id = 75,
                            Description = "Steadicam Camtree Wonder-3",
                            Img = "flycam_fd0f.jpg",
                            IsDeleted = false,
                            Name = "Flycam HD-3000",
                            State = 0
                        },
                        new
                        {
                            Id = 76,
                            Img = "ZoomH1_2ffd.jpg",
                            IsDeleted = false,
                            Name = "Rekordér Zoom H1",
                            State = 0
                        },
                        new
                        {
                            Id = 77,
                            Img = "ZoomH1_2ffd.jpg",
                            IsDeleted = false,
                            Name = "Rekordér Zoom H1",
                            State = 0
                        },
                        new
                        {
                            Id = 78,
                            Img = "MiniTripod_92cc.jpg",
                            IsDeleted = false,
                            Name = "stativ MiniTripod plochý",
                            State = 0
                        },
                        new
                        {
                            Id = 79,
                            Img = "Sigma30_0caf.jpg",
                            IsDeleted = false,
                            Name = "Objektiv Sigma 30mm/F1.4",
                            State = 0
                        },
                        new
                        {
                            Id = 80,
                            Description = "F1,5 f2,84-34,1mm (včetně akumulátoru)",
                            Img = "Panasonic_HC-X920_7ce7.jpg",
                            IsDeleted = false,
                            Name = "Videokamera Panasonic HC-X920",
                            State = 0
                        },
                        new
                        {
                            Id = 81,
                            Img = "RigSpider_ea93.jpg",
                            IsDeleted = false,
                            Name = "Stativ Rig Spider FT-10",
                            State = 0
                        },
                        new
                        {
                            Id = 82,
                            Img = "RigSpider_ea93.jpg",
                            IsDeleted = false,
                            Name = "Stativ Rig Spider FT-10",
                            State = 0
                        },
                        new
                        {
                            Id = 83,
                            Img = "RigSpider_ea93.jpg",
                            IsDeleted = false,
                            Name = "Stativ Rig Spider FT-10",
                            State = 0
                        },
                        new
                        {
                            Id = 84,
                            Description = "(kulová hlava)",
                            Img = "StativMS-007H_3d14.jpg",
                            IsDeleted = false,
                            Name = "Stativ video MS-007H",
                            Note = "poškozen zip",
                            State = 0
                        },
                        new
                        {
                            Id = 85,
                            Description = "bez předzesilovače, induktivní",
                            Img = "MikrofonKlopový_97b3.jpg",
                            IsDeleted = false,
                            Name = "Mikrofon klopový",
                            State = 0
                        },
                        new
                        {
                            Id = 86,
                            Description = "bez předzesilovače, induktivní",
                            Img = "MikrofonKlopový_97b3.jpg",
                            IsDeleted = false,
                            Name = "Mikrofon klopový",
                            State = 0
                        },
                        new
                        {
                            Id = 87,
                            Img = "SonyVct-d680rm_9d51.jpg",
                            IsDeleted = false,
                            Name = "Stativ Sony VCT-D680RM",
                            State = 0
                        },
                        new
                        {
                            Id = 88,
                            Description = "Tento výrobek je zkonstruován z tenkého plátu ocelového plechu, který má patinovaný povrch. Díky tomuto hrubému povrchu působí výrobek surově, ale zároveň kvůli jednoduché až primitivní konstrukci nabývá minimalistického a elegantního vzhledu. ",
                            Img = "tn-techtips_f9dd.jpg",
                            IsDeleted = true,
                            Name = "zkušební předmět",
                            Note = "první předmět",
                            State = 0
                        },
                        new
                        {
                            Id = 89,
                            Description = "Tento výrobek je zkonstruován z tenkého plátu ocelového plechu, který má patinovaný povrch. Díky tomuto hrubému povrchu působí výrobek surově, ale zároveň kvůli jednoduché až primitivní konstrukci nabývá minimalistického a elegantního vzhledu. ",
                            Img = "kitt-design-illustration_73ad.png",
                            IsDeleted = true,
                            Name = "zkušební předmět",
                            Note = "druhý předmět",
                            State = 0
                        },
                        new
                        {
                            Id = 90,
                            Description = "Tento výrobek je zkonstruován z tenkého plátu ocelového plechu, který má patinovaný povrch. Díky tomuto hrubému povrchu působí výrobek surově, ale zároveň kvůli jednoduché až primitivní konstrukci nabývá minimalistického a elegantního vzhledu. ",
                            Img = "tn-techtips_f9dd.jpg",
                            IsDeleted = true,
                            Name = "zkušební předmět",
                            State = 0
                        },
                        new
                        {
                            Id = 91,
                            Description = "Tento výrobek je zkonstruován z tenkého plátu ocelového plechu, který má patinovaný povrch. Díky tomuto hrubému povrchu působí výrobek surově, ale zároveň kvůli jednoduché konstrukci nabývá minimalistického a elegantního vzhledu. ",
                            IsDeleted = true,
                            Name = "Fiktivní předmět",
                            State = 0
                        },
                        new
                        {
                            Id = 92,
                            Description = "Tento výrobek je zkonstruován z tenkého plátu ocelového plechu, který má patinovaný povrch. Díky tomuto hrubému povrchu působí výrobek surově, ale zároveň kvůli jednoduché konstrukci nabývá minimalistického a elegantního vzhledu. ",
                            IsDeleted = true,
                            Name = "Fiktivní předmět",
                            State = 0
                        });
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.Renting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Rentings");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.RentingHistoryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentingId");

                    b.HasIndex("UserId");

                    b.ToTable("RentingHistoryLogs");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.RentingItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("RentingId")
                        .HasColumnType("int");

                    b.Property<bool>("Returned")
                        .HasColumnType("bit");

                    b.HasKey("ItemId", "RentingId");

                    b.HasIndex("RentingId");

                    b.ToTable("RentingItems");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.UploadedFile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Uploaded")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OauthId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Trustfulness")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OauthId")
                        .IsUnique()
                        .HasFilter("[OauthId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.AccessoryItem", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Item", "Accessory")
                        .WithMany()
                        .HasForeignKey("AccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Item", "Item")
                        .WithMany("Accessories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Accessory");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.CartItem", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Item", "Item")
                        .WithMany("Carts")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.User", "User")
                        .WithMany("Cart")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.CategoryItem", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Item", "Item")
                        .WithMany("Categories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.FavouriteItem", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Item", "Item")
                        .WithMany("Favourites")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.User", "User")
                        .WithMany("Favourite")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.InventoryItem", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Item", "Item")
                        .WithMany("Inventories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.User", "User")
                        .WithMany("Inventory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.Renting", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.User", "Owner")
                        .WithMany("Rentings")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.RentingHistoryLog", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Renting", "Renting")
                        .WithMany("Logs")
                        .HasForeignKey("RentingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Renting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.RentingItem", b =>
                {
                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Item", "Item")
                        .WithMany("Rentings")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rentals_API_NET6.Models.DatabaseModel.Renting", "Renting")
                        .WithMany("Items")
                        .HasForeignKey("RentingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Renting");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.Item", b =>
                {
                    b.Navigation("Accessories");

                    b.Navigation("Carts");

                    b.Navigation("Categories");

                    b.Navigation("Favourites");

                    b.Navigation("Inventories");

                    b.Navigation("Rentings");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.Renting", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("Rentals_API_NET6.Models.DatabaseModel.User", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("Favourite");

                    b.Navigation("Inventory");

                    b.Navigation("Logs");

                    b.Navigation("Rentings");
                });
#pragma warning restore 612, 618
        }
    }
}
